//需求分析
为了避免一次数据请求过多,我们把这些数据分批请求
数据的分批请求,当我们点2时,就把第二页的数据请求回来
当我点3的时候,就把第三页的数据请求回来
当我鼠标向下滑动加载,也叫做分页
只要你到头的时候,就把数据重新获取,再渲染到页面就加载出来了
类似于这种分页效果,我们需要做什么
一共有99条数据,每次只展示10条数据
刚开始访问的时候,我们只展示10条数据








1.获取每一页的数据
URL:"/getList" GET
参数:?n=1 告诉服务器端我需要获取的是第一页的数据
返回:
'{
    "code":0,//->成功 1失败
    "msg":"",
    "total":10,//->服务器端返回的总页数
    "data":[
        {
        "num":1,
        "name":"xxx",
        "sex":0, 0->男 1->女
        "score":90
        }
    ]
}'


2.获取指定学员的信息
 url:"/getInfo" GET
 参数:?id=xxx
 返回:
 '
 {
   "code":0,
   "msg":"",
   "data":{
   "id":1,
   "name":"xxx",
   "sex":0,
   "score":90
   }
 }
 '
 //服务器端需要做的事情,发布一个服务,构建一个端口,如果他请求的是css,js,html文件,我们还要做
 //一些处理
 //接下来,服务器端按照这个接口规范来实现,客户端按照这个接口来调取
 //那么我们的整个项目就完成了
 //刚开始加载页面,向服务器发送请求,把第一页的十个数据返回,接下来,把底下的操作按钮实现,点击时把数据读取出来
 n = 1 0~9
 n = 2 10~19
 n = 3 20~29
 n =  ?   (n-1)*10 ~ n*10-1