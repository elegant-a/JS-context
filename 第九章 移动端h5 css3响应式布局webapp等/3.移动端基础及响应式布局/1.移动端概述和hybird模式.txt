移动端:运行在移动设备上的产品
移动设备:手机,平板,I TOUCH....移动设备
我们以后做的产品,大部分只需要适配IOS系统和安卓系统即可

响应式布局:在不同的设备上都能给予客户最好的操作体验,
移动端的产品
产品:
APP:手机应用,目前市面上流行的APP产品大部分都是原生APP开发者做的 IOS:OBJECT-C 安卓:JAVA-NATIVE
  目前市场上正在趋于使用JS来开发原生的APP:Reactive Native,phoneGap...,通过写js代码实现你想要的
   功能,提供了打包功能,会自动把代码转换成,自动把js代码转换成ios和安装的两套代码,最终原理,
   现在就是全力转前端,用React Native和
H5:
    HTML页面,都是运行在浏览器中的(pc或者移动端浏览器)
//我们重点要学的就是h5内置的,uc,qq,百度,谷歌,火狐,safari,欧朋,ie,360,搜狗
//在ios和安卓平台上的浏览器,大部分都是webkit内核的,所以移动端做的H5页面不用像PC端那样去处理浏览器兼容


//我们要做的东西都是HTML页面,考虑响应式布局
//以后工作中,我们这一类前端开发工程师,主要做的产品形态有哪些
->做一个HTML页面,即需要在pc端访问也需要在移动端访问,例如:猎豹和华为,当缩小到一定比例下,我们的比例
都会变,这就是响应式布局(属于pc和移动端共用一套项目)


pc端和移动端用的是不同的项目:例如:京东,淘宝,qq,都是不同的项目....,PC端不需要做响应式,移动端需要做响应式
//不同的产品形态导致了我们不同的产品思想


在移动端,我们开发出来的HTML页面(H5),运行的环境:移动端的浏览器:UC,qq,百度..

原生APP的(Native App) webView中:hyBride模式 //例如在微信中打开一个H5页面
,我们的H5其实就运行在微信的webView中的,


hyBrid模式(混合模式移动应用是指介于web-app,native-app这两者之间的app:
//->把我们开发的H5嵌入到Native App的webView中运行的(所谓的webView你可以简单的理解为
一个浏览器,也是webkit内核的)

移动端,H5,响应式布局,webApp,场景应用,微信二次开发..
移动互联网刚刚开始兴起的时候,我们手机上的应用(App)都是通过Native App开发而成的;Native App
的开发具备很多的优势:
->开发出来的产品具有良好的用户体验,动画和运行速度非常快
->能够对手机的内部软件或者硬件进行直接的操作,例如:可以调取用户的通讯录,读取用户的短信(当然需要
用户同意),可以调取用户的摄像头,调取手机的重力感应等

但是Native App的开发也存在自己的很多不足:

->首先是不能跨平台开发,针对目前最常用的IOS和安卓平台:需要用不同的技术来开发
IOS一般使用的是Object-c,而安卓一般使用的是Java-Native,这样就导致了开发一款APP
需要两队人马去做,开发成本高,开发周期长，有的功能IOS有但是安卓没有(手Q就是这样的)

->开发出来的产品需要用户自主性比较强:首先需要客户到应用商店安装,后期如果版本升级,
用户想要看到最新的版本还需要重新进行下载安装升级等;

在IOS平台上,开发出一款APP上传到苹果APP Stroe需要等待7天的审核期,在此期间,如果审核失败,
还需要等待七天,这样就有可能导致产品不能按时发布等



//不需要用户升级，操作的功能比较少

Hybrid App
           基于HTML5低成本


盒子都是Native App
H5就嵌入到里面了

web主体型,壳子可以是安卓或者ios开发，也可以我们使用JS开发,里面用


App把这个功能做好,给h5提供一个接口

1.JSbrige(微信平台的JS SDK就是基于这个开发的)

以上的操作基本上都需要由APP那边开发,我们主要讲的是H5,所以在此处不对App的机制做过多的描述.
大家只需要知道,App那边做了特殊的处理(就是在webView中注入一个对象,对象中包含了我们需要调取的方法)


//下面是我们使用JS调取微信接口的deom
第二种常用的方式；伪装的URL或者伪装的协议


window.location.href="zhufeng//phone?callback=fn"
//把某个方法名传递给APP，把方法名传递给app,


目前两者通信的话,就这两种方式,都是由原生的app做主体操作,我们要做的只是发送调取即可




