我们大家都知道HTML和CSS不属于编程语言而是标记语言,所以很难像JS一样定义变量,编写方法,实现模块化开发
.而目前的CSS编写模式中,都是定义一些公共的样式类名,哪一块的HTML需要这个样式,就去增加对应的样式类名,
所以我们经常看到一个标签上存在很多的样式类名,在这种模式中我们要时常关注CSS的优先级,避免样式的
重叠覆盖...

  为了解决CSS的这一困境,CSS预处理编译的思想脱颖而出,比较具有代表性的有LESS,SASS,Stylus.
它们在传统的CSS基础上增加了大量的新的语法,编写方式,常用的函数等,可以让我们css像js成为一门语言.
基于LESS我们可以把一些经常用到额样式定义成变量或者函数,以后需要直接的调取即可,这样不仅有利于我们的开发速度,
也有利于项目的后期维护和可复用性;

LESS 
    在这篇文章以及后续的文章中,LESS是一门CSS预处理语言m它扩展了CSS语言,增加了变量,Mixin,函数
等特性,使CSS更易维护和扩展.使用LESS基本上按照这样的步骤:编写LESS代码,使用NODE,JS或者是其他的
工具把编写的LESS代码编译成我们平时看到的CSS代码(因为浏览器是无法解析LESS语法的,所以编写完成的LESS
代码需要进行编译)


LESS:变量,函数,嵌套,


1.通过NODE编译
npm install less-g(安装less)
lessc -v(查看less的版本)
在命令行窗口中lessc TEST1.less lessTEST1.css




2.通过BROWSER进行编译
LESS只支持下现代浏览器中运行(最新版本的Chrome,Firfox,Safari和IE)
我们不建议在生产环境使用LESS客户端,因为将LESS编译成
less只是方便开发的,我们需要编译成css才可以让浏览器识别

//<link rel="stylesheet/less" href="./less/">
<script src="./less/less-min.js"></script>


//可以利用webpack进行自动化打包,搭建一个数组自己产品的自动化平台,实现自动打包,
//等功能