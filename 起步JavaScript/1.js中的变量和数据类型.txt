//变量:可变的量
js中变量是一个抽象的概念,变量是用来存储值和代表值的
//
//number
数据类型Number:正数,负数,0,小数,NaN
NaN:not a number 不是一个有效的数字 但是它是属于number类型的
isNaN()检测一个值是不是有效数字命题是否成立,是有效数字返回false,不是有效数字
返回的才是true
//如果检测的值不是number类型,
//强制类型数据转换
Number("12") ==> 12 Number("12px") ==> NaN
//非强制类型数据转换
parseInt/parseFloat
//从左到右,一个个字符查找,把是数字的转化为有效的数字,中途如果遇到了一个非有效的
数字,就不在继续查找了
//parseFloat:和上面一样,可以多识别一个小数点
parseInt("12px")  ==> 12
parseInt("zhufeng2015")
NaN
parseFloat()
parseInt("12.5px")
12
//三种字符串转换数字的方法
parseInt()
parseFloat()
Number()


数据类型-boolean和数据类型转换转换规律
//数据类型转换的规则
//1.如果只有一个值,判断这个值是真还是假,
        只有 0 NaN ""(空字符串) null undefined 这5歌是假的
其余都是真
!的意思是先转换成布尔类型值,然后再取反
!!将其他的数据类型转换成boolean类型

//数据类型转换的规则

//数据类型转换规则(如果只有一个值,判断这个值是真还是假,如果两个值比较)
2.如果两个值比较是否相等,遵循这个规则:
//val1 == val2 两个值可能不是同一个数据类型
如果是==比较的话,会进行默认的数据类型转换
1)对象和对象永远不相等,因为原型不相等
2)对象 == 字符串 先将对象转换为字符串(调用toString的方法),然后再进行比较
   []转换为字符串""
   {}转换为字符串"[object object]"
[1,2,3,4,5].toString() ==> "1,2,3,4,5"
3)对象 == 布尔类型 对象先转化为字符串 对象先转换为字符串(toString),然后再转换为
数字(Number),布尔类型也转换为数字(true),最后让两个数字比较
4)对象 == 字符串
对象转换为字符串,字符串转换为数字,
[] == 0
5) 数字 == 布尔

将布尔值变为数字
6)数字 == 字符串
字符串转换为数字
7）字符串 == 布尔
都转换为数字
8)null == undefined 结果是true
9) null 或者 undefined 和其他任何数据类型比较都不相等
总的来说{}转换为[obj,obj],数组转换为字符串"obj,obj",
然后字符串转换为数字进行比较

//js数据类型中的对象数据类型
//由多组[属性名和属性值]组成,多组键值对
obj.name = "朱峰"
obj["age"] = 6;
//修改原有属性名的属性值,规定一个对象中的属性名不能重复,如果之前有就是修改
,没有就是增加
//获取属性名和属性值
console.log(obj["name"]) 
//删除属性名和属性值
obj.age = null //假删除
delete obj.age//真删除


//对象数据类型中,还可以具体的细分
//对象类(Object),数组类(Array),正则类(RegExp),时间类(Date)

//js中对象,类,实例的区别:对象是泛指,js中万物皆对象,类是对对象的细分,
实例是类中的一个具体的事物

var obj = {};
var ary = [];
var reg = /^$/;




