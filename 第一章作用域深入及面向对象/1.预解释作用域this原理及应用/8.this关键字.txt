//我们在js中主要研究的都是函数中的this
console.log(this)
//JS中的this代表的是当前行为的执行的主体JS中的context代表的是执行当前行为的环境(区域)
//例如:xx在沙县小吃 吃蛋炒饼,this->张文静 context->沙县小吃

//this是谁和函数在哪定义的和在哪执行的都没有任何的关系;如何区分this呢?
//1.函数执行,首先看函数名前面是否有.,有的话, .前面是谁,this就是谁,没有的话,this就是window
function fn(){
console.log(this)
}
var obj = {fn:fn}
fn();
obj.fn();//this->obj

function sum(){
  fn();//this->window
}
sum()

var oo = {
sum:function(){
//this->oo
//找到在哪执行,看前面.都有啥,有this就指向谁
   fn();//this->window
}
};
oo.sum()

document.getElementById("div1").onclick = fn;
//2.自执行函数中的this永远是window
//3.给元素的某一个事件绑定方法,当事件触发的时候,执行对应的方法,方法中的this是当前
元素
//事件绑定不需要执行,点击自动执行
document.getElementById("div1").onclick = function(){
//this->div1
fn();//this-windows
}