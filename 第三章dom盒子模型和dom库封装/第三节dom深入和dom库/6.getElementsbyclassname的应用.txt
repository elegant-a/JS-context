<div></div>
<div></div>
<div></div>
<div></div>
<div></div>
document.getElementsByClassName("w1")

写一个样式类名:只要包含这个样式类名就可以


document.getElementByClassName("w3 w1");
必须同时包含w1&&w3才可以,但是和样式的顺序以及中间有多少个
空格是没有关系的
//->getElementsByclass:通过元素的样式类名获取一组元素集合
//->className:要获取的样式类名(可能是一个也可能是多个)
//->context；获取元素的上下文->这个值不传递默认document
function getElementsByClass(className,context){
   context = context || document;
   //把传递进来的样式类名首尾空格先去掉,然后按照中间的空格把它里面的每一项
     拆分成数组
   var classNameAry = className.replace(/(^ +| +$)/g,"").split(/ +/g);
   
    var ary = [];
   //获取指定上下文中所有的元素标签,循环这些标签,获取每一个标签的className样式类名
     的字符串
     var nodeList = context.getElementsByTagName("*");//->获取指定上下文中的所有元素
     标签
     for(var i = 0,len = nodeList.length;i < len;i++){
         var curNode = nodeList[i];
         //判断curNode.className是否即包含"w3"也包含"w1",如果两个都包含的话,curNode就是我想要的,
           否则就不是我想要的
           var isOk = true;//我们假设curNode中包含了所有的样式
           for (var k = 0;k<classNameAry.length;k++){
           var curName=classNameAry[i];
           var reg=new RegExp("(^| +)"+classNameAry[i] + "( +|)");
           //->第一次"w3" /(^| +)w3( +|$)/
          if(!reg.test(curNode.classNamee)){
             isOk=false;
             break;
   }
}
if(isOk){ //->拿每一个标签分别和所有样式类名比较后,如果结果还是true的话,说明当前
//元素标签包含了所有的样式,也是我们想要的
       ary.push(curNode)
}
  return ary
}


function getElementsByClass(strName,context){
      context=context || document;
      if(flag){
         return this.listToArray(context.getElementsByClassName(strNamm);) 

} ie6~8
           var ary=[]     
           var strClassAry=strClass.replace(/(^ +| +$)/g,"").split(/ +/g);
           var nodeList=context.getElementsBtTagName("*")
           for(var i = 0,len=nodeList.length;i<len;i++){
               var curNode=nodeList[i];
               var isOk=true;
               for(var k = 0;k<strClassAry.length;k++){
               var reg = new RegExp("(^| +)"+ strClassAry[k] +"( +|$)");
               if(!reg.test(curNode.className)){
               isOk=false;
               break;
              
}
}
if(isOk){
 ary[ary.length]=curNode;
}
}
           return ary
}

